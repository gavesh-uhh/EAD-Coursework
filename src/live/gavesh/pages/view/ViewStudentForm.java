/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package live.gavesh.pages.view;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import live.gavesh.data.Attendance;
import live.gavesh.data.Mark;
import live.gavesh.data.Student;
import live.gavesh.util.DatabaseHelper;
import java.util.Date;

/**
 *
 * @author gav
 */
public class ViewStudentForm extends javax.swing.JFrame {

    private Student student;

    /**
     * Creates new form ViewStudentForm
     */
    public ViewStudentForm(String studentId) {
        initComponents();
        this.student = DatabaseHelper.getStudentById(Integer.parseInt(studentId));
        int studentIntID = Integer.parseInt(student.getStudentId());
        this.studentNameLabel.setText(student.getFullName());
        String totalPerformance = "Attendance Overall - " + (DatabaseHelper.getStudentAttendancePercentage(studentIntID)) + "%";
        this.studentAddressLabel.setText(totalPerformance);
        this.loadAllAttedances();
        this.loadAllGrades();
        DatabaseHelper.getAllSubjects().forEach((t) -> {
            this.subjectComboBox.addItem(t.getSubjectName());
            this.attendanceSubjectCombo.addItem(t.getSubjectName());
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        studentNameLabel = new javax.swing.JLabel();
        studentAddressLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        gradesTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        attendanceTable = new javax.swing.JTable();
        examTypeComboBox = new javax.swing.JComboBox<>();
        marksField = new javax.swing.JTextField();
        addMarksButton = new javax.swing.JButton();
        subjectComboBox = new javax.swing.JComboBox<>();
        deleteMarkButton = new javax.swing.JButton();
        attendanceDatePicker = new javax.swing.JSpinner();
        markPresentButton = new javax.swing.JButton();
        markAbsentButton = new javax.swing.JButton();
        studentAddressLabel1 = new javax.swing.JLabel();
        studentAddressLabel2 = new javax.swing.JLabel();
        examDatePicker = new javax.swing.JSpinner();
        attendanceSubjectCombo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 0, 51));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Viewing Profile");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addContainerGap())
        );

        studentNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        studentNameLabel.setText("Student Name");

        studentAddressLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        studentAddressLabel.setText("Overall Performance");

        gradesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject", "Period", "Date", "Marks"
            }
        ));
        jScrollPane1.setViewportView(gradesTable);

        attendanceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Subject", "Presence"
            }
        ));
        jScrollPane2.setViewportView(attendanceTable);

        examTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Individual", "First-Term", "Mid-Term", "Last-Term" }));

        marksField.setText("0");

        addMarksButton.setText("Add");
        addMarksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMarksButtonActionPerformed(evt);
            }
        });

        deleteMarkButton.setText("Remove");
        deleteMarkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMarkButtonActionPerformed(evt);
            }
        });

        attendanceDatePicker.setModel(new javax.swing.SpinnerDateModel());
        attendanceDatePicker.setToolTipText("");

        markPresentButton.setText("Mark Present");
        markPresentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                markPresentButtonActionPerformed(evt);
            }
        });

        markAbsentButton.setText("Mark Absent");
        markAbsentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                markAbsentButtonActionPerformed(evt);
            }
        });

        studentAddressLabel1.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        studentAddressLabel1.setText("Attendance");

        studentAddressLabel2.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        studentAddressLabel2.setText("Marks");

        examDatePicker.setModel(new javax.swing.SpinnerDateModel());
        examDatePicker.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(attendanceDatePicker)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(studentNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                            .addComponent(studentAddressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(attendanceSubjectCombo, 0, 172, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(markPresentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(markAbsentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(studentAddressLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(subjectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(marksField, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(examTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(examDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(deleteMarkButton, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                    .addComponent(addMarksButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(5, 5, 5)))
                        .addContainerGap())
                    .addComponent(studentAddressLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(studentAddressLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(studentNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(studentAddressLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(studentAddressLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(examTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteMarkButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(attendanceDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(examDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marksField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addMarksButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(markPresentButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(markAbsentButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(attendanceSubjectCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addMarksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMarksButtonActionPerformed
        float value = Float.parseFloat(this.marksField.getText());
        String selectedSubjectName = (String) subjectComboBox.getSelectedItem();
        int subjectId = DatabaseHelper.getSubjectIdByName(selectedSubjectName);
        int studentId = Integer.parseInt(student.getStudentId());

        boolean success = DatabaseHelper.insertMark(
                studentId,
                subjectId,
                this.examTypeComboBox.getSelectedItem().toString(),
                (Date) this.examDatePicker.getValue(),
                value
        );

        if (success) {
            ((DefaultTableModel) gradesTable.getModel()).setRowCount(0);
            this.loadAllGrades();
        }
    }//GEN-LAST:event_addMarksButtonActionPerformed

    private void deleteMarkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMarkButtonActionPerformed
        int selectedRow = gradesTable.getSelectedRow();
        if (selectedRow == -1) {
            return;
        }

        String subjectName = gradesTable.getValueAt(selectedRow, 0).toString();
        String examType = gradesTable.getValueAt(selectedRow, 1).toString();
        java.sql.Date examDate = (java.sql.Date) gradesTable.getValueAt(selectedRow, 2);

        int studentId = Integer.parseInt(student.getStudentId());
        int subjectId = DatabaseHelper.getSubjectIdByName(subjectName);

        boolean success = DatabaseHelper.deleteMark(studentId, subjectId, examType, examDate);

        if (success) {
            ((DefaultTableModel) gradesTable.getModel()).setRowCount(0);
            this.loadAllGrades();
        }
    }//GEN-LAST:event_deleteMarkButtonActionPerformed

    private void markPresentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_markPresentButtonActionPerformed
        addAttendance(true);
    }//GEN-LAST:event_markPresentButtonActionPerformed

    private void markAbsentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_markAbsentButtonActionPerformed
        addAttendance(false);
    }//GEN-LAST:event_markAbsentButtonActionPerformed

    private void addAttendance(boolean present) {
        int studentId = Integer.parseInt(student.getStudentId());
        String subjectName = attendanceSubjectCombo.getSelectedItem().toString();
        int subjectId = DatabaseHelper.getSubjectIdByName(subjectName);
        Date selectedDate = (Date) this.attendanceDatePicker.getValue();
        boolean success = DatabaseHelper.insertAttendance(studentId, subjectId, selectedDate, present ? "Present" : "Absent");
        if (success) {
            DefaultTableModel model = (DefaultTableModel) this.attendanceTable.getModel();
            model.setRowCount(0);
            loadAllAttedances();
        }
    }

    private void loadAllAttedances() {
        DefaultTableModel model = (DefaultTableModel) this.attendanceTable.getModel();
        int studentId = Integer.parseInt(student.getStudentId());
        ArrayList<Attendance> records = DatabaseHelper.getAttendanceByStudentId(studentId);
        for (Attendance a : records) {
            model.addRow(new Object[]{
                a.getDate(),
                DatabaseHelper.getSubjectById(a.getSubjectId()).getSubjectName(),
                a.getStatus()
            });
        }
    }

    private void loadAllGrades() {
        DefaultTableModel model = (DefaultTableModel) this.gradesTable.getModel();
        int studentId = Integer.parseInt(student.getStudentId().trim());
        ArrayList<Mark> records = DatabaseHelper.getMarksByStudentId(studentId);
        for (Mark a : records) {
            System.out.println(a.getExamType());
            model.addRow(new Object[]{
                DatabaseHelper.getSubjectById(a.getSubjectId()).getSubjectName(),
                a.getExamType(),
                a.getExamDate(),
                a.getMarksObtained()
            });
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addMarksButton;
    private javax.swing.JSpinner attendanceDatePicker;
    private javax.swing.JComboBox<String> attendanceSubjectCombo;
    private javax.swing.JTable attendanceTable;
    private javax.swing.JButton deleteMarkButton;
    private javax.swing.JSpinner examDatePicker;
    private javax.swing.JComboBox<String> examTypeComboBox;
    private javax.swing.JTable gradesTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton markAbsentButton;
    private javax.swing.JButton markPresentButton;
    private javax.swing.JTextField marksField;
    private javax.swing.JLabel studentAddressLabel;
    private javax.swing.JLabel studentAddressLabel1;
    private javax.swing.JLabel studentAddressLabel2;
    private javax.swing.JLabel studentNameLabel;
    private javax.swing.JComboBox<String> subjectComboBox;
    // End of variables declaration//GEN-END:variables
}
